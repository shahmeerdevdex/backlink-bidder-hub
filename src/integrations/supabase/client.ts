
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://ezrfatxvtvuyyphkvdod.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImV6cmZhdHh2dHZ1eXlwaGt2ZG9kIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzkzOTQyNzMsImV4cCI6MjA1NDk3MDI3M30.BPmvwOmaFpNDZzYpUngTyn3Os2atD0lyjrPu2dFKp34";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true
    }
  }
);

// Add debug logging for function invocation
const originalInvoke = supabase.functions.invoke;
supabase.functions.invoke = async function(functionName, options = {}) {
  // Ensure options.body is properly stringified if it's an object
  if (options.body && typeof options.body === 'object') {
    options.body = JSON.stringify(options.body);
  }
  
  console.log(`Invoking Supabase function: ${functionName}`, options);
  try {
    const result = await originalInvoke.call(this, functionName, options);
    console.log(`Function ${functionName} result:`, result);
    return result;
  } catch (error) {
    console.error(`Error invoking function ${functionName}:`, error);
    throw error;
  }
};
